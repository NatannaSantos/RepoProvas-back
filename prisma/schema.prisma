// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  session  Session[]

  @@map("users")
}

model Session {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  userId Int
  token  String @unique

  @@map("sessions")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique
  test Test[]

  @@map("categories")
}

model Teacher {
  id                 Int                 @id @default(autoincrement())
  name               String              @unique
  teacherDisciplines TeacherDiscipline[]

  @@map("teachers")
}

model TeacherDiscipline {
  id        Int     @id @default(autoincrement())
  teacher   Teacher @relation(fields: [teacherId], references: [id])
  teacherId Int
  test      Test[]
  discipline Discipline @relation(fields: [disciplineId],references: [id])
  disciplineId Int

  @@map("teacherDisciplines")
}

model Test {
  id                  Int               @id @default(autoincrement())
  name                String
  pdfUrl              String
  viewsCount          Int               @default(0)
  category            Category          @relation(fields: [categoryId], references: [id])
  categoryId          Int
  teacherDiscipline   TeacherDiscipline @relation(fields: [teacherDisciplineId], references: [id])
  teacherDisciplineId Int

  @@map("tests")
}

model Term {
  id         Int          @id @default(autoincrement())
  number     Int          @unique
  discipline Discipline[]

  @@map("terms")
}

model Discipline {
  id     Int    @id @default(autoincrement())
  name   String @unique
  term   Term   @relation(fields: [termId], references: [id])
  termId Int
  teacherDiscipline TeacherDiscipline[]

  @@map("disciplines")
}
